[
  {
    "programmer": "Роман Дудойть",
    "date": "19.12.2020",
    "changes": "1. Создан файл автозагрузки классов<br>2. Добвалена константа проверки (RII_CORE_INCLUDED) для проверки подключения ядра<br>3. Исправлена переменная формирования пути. (добавлена переменная $_SERVER['DOCUMENT_ROOT'])"
  },
  {
    "programmer": "Илья Василевич",
    "date": "19.12.2020",
    "changes": "1. Переписал функцию get класс Config<br>2. Создал класс Page (Singleton)<br>3. Содал макет под методы getProperty, setProperty, showProperty, addJs, addCss, addString"
  },
  {
    "programmer": "Илья Чернецкий",
    "date": "19.12.2020",
    "changes": "1. Создал макет внешней оболочки сайта<br>2. Создал буффер"
  },
  {
    "programmer": "Илья Василевич",
    "date": "28.12.2020",
    "changes": "1. Подправил наследование класса Page, и доступность полей и методов<br>2. Переделал пользовательский конструктор<br>3. Создал функцию getMacro для формирования макроса<br>4. Реализовал get, set, show для property (получение, установка, вывод макроса)<br>5. Реализовал add, show для js (получение, установка, вывод макроса)<br>6. Реализовал add, show для css (получение, установка, вывод макроса)<br>7. Реализовал add, show для string (получение, установка, вывод макроса)<br>9. Создал функцию getStr для преобразования готового массива в строку<br>10. Создал функцию getGroupingProperty для формирования массива property (макрос => значение)"
  },
  {
    "programmer": "Илья Чернецкий",
    "date": "29.12.2020",
    "changes": "1. Вывожу footer через echo<br>2. Прописываю в своем классе DOCUMENT_ROOT<br>3. Делаю start / end / restart  (buffer) не статическими<br>5. endBuffer должен возвращать контент (предварительно заменив все свойства страницы. Это будет после того, как ты получишь себе класс Page)<br>6. Исключить возможность повторного подключения хэдэра и футера. Т.е. в статических методах мы должны работать с нашим синглтоном и понимать чем живёт страница"
  },
  {
    "programmer": "Роман Дудойть",
    "date": "04.01.2021",
    "changes": "1. Создание базового класса для шаблонов"
  },
  {
    "programmer": "Илья Василевич",
    "date": "04.01.2021",
    "changes": "1. Создание класса Template<br>2. Создание метода render для подключения файлов шаблона"
  },
  {
    "programmer": "Роман Дудойть",
    "date": "05.01.2021",
    "changes": "1. Исправлена переменная __path (теперь символы заменяются только в $id)<br>2. Исправлен конструктор. Передаётся одна обязательная $id и две дефолтные $template и $params<br>3. Добавлены типы полям класса<br>4. Доработана инициализация $template (теперь если значение равно null шаблон не загружается)"
  },
  {
    "programmer": "Илья Чернецкий",
    "date": "06.01.2021",
    "changes": "1. Создан метод Application::includeComponent<br>2. Создан компонент rii/components/rii/element.list/class.php<br>3. Создан rii/components/rii/element.list/templates/default/template.php"
  },
  {
    "programmer": "Илья Василевич",
    "date": "06.01.2021",
    "changes": "1. Доработка класса Template"
  },
  {
    "programmer": "Роман Дудойть",
    "date": "06.01.2021",
    "changes": "1. Доработана инициализация $template. Если $template пустая строка, то инициализируем дефолтный шаблон"
  },
  {
    "programmer": "Илья Чернецкий",
    "date": "09.01.2021",
    "changes": "1. Разработка функционала компонента"
  }
]